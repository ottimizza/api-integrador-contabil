server:
  servlet:
    context-path: 
  port: ${PORT:9004}

spring:
  datasource:
    url: jdbc:postgresql://ec2-54-81-107-25.compute-1.amazonaws.com:5432/d4qq8hl49hi7hr
    username: u2ek3sojqjmutl
    password: pbe732d63e9863961de97ad2f9ec31ff8e4492e49d6b04bcf49a34508a22a043b
    driver-class-name: org.postgresql.Driver
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
      enabled: true

    tomcat:
      initial-size: 2

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: ${HIBERNATE_SHOW_SQL:true}
    properties:
      hibernate:
        generate_statistics: ${HIBERNATE_STATISTICS:false}
        temp:
          use_jdbc_metadata_defaults: false


oauth2-config:
  client-id: ${OAUTH2_CLIENT_ID:76179baad962d1b8ce4d}
  client-secret: ${OAUTH2_CLIENT_SECRET:8faedc0e6e1520d13f06f787d6760c303f3e8768}
  server-url: ${OAUTH2_SERVER_URL:https://development-oauth-server.herokuapp.com}

depara:
  service:
    name: depara-service
    url: ${DEPARA_BASE_URL:https://development-api-depara.herokuapp.com}

oauth:
  service:
    name: oauth-service
    url: ${OAUTH2_SERVER_URL:https://development-oauth-server.herokuapp.com}
    
salesforce:
  service:
    name: salesforce-service
    url: ${SALES_FORCE_URL:https://api-salesforce-client.herokuapp.com}

storage-s3:
  service:
    name: storages3-service
    url: ${STORAGE_URL:https://beta-s3-storage.herokuapp.com}
    bucket: ${STORAGE_BUCKET:staging-imagens}

email-sender:
  service:
    name: email-sender-service
    url: ${EMAIL_SENDER_URL:https://api-emaiil-sender.herokuapp.com}

kafka:
  service:
    name: kafka-service
    url: ${KAFKA_SERVER_URL:https://ottimizza-queue-events.herokuapp.com}

whatsapp-notification:
  service:
    name: whatsapp-notification-service
    url: ${WHATSAPP_SERVER_URL:https://api-whatsapp-notifications.herokuapp.com}

email-oud-finalizado: ${EMAIL_OUD_FINALIZADO:projetooic@ottimizza.com.br}

email-envio-checklist: ${EMAIL_ENVIO_CHECKLIST:preentrega@ottimizza.com.br}

security:
  jwt:
    # Chave pública para validação de Token JWT. :)
    # . . Pode ser um caminho: classpath:public-key.txt
    public-key: ${JWT_PUBLIC_KEY}
  
  #oauth2:
  #  client:
  #    clientId: ${oauth2-config.client-id}
  #    clientSecret: ${oauth2-config.client-secret}
  #    accessTokenUri: ${oauth2-config.server-url}/oauth/token
  #    userAuthorizationUri: ${oauth2-config.server-url}/oauth/authorize

  #  resource:
  #    userInfoUri: ${oauth2-config.server-url}/user/info
  #    tokenInfoUri: ${oauth2-config.server-url}/oauth/check_token
